// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  exams     Exam[]    @relation("CreatedExams")
  attempts  Attempt[]
}

model Exam {
  id          String     @id @default(uuid())
  title       String
  duration    Int // in minutes
  questions   Question[]
  createdBy   User       @relation("CreatedExams", fields: [createdById], references: [id])
  createdById String
  Attempt     Attempt[]
}

model Question {
  id          String   @id @default(uuid())
  text        String
  options     Option[]
  exam        Exam     @relation(fields: [examId], references: [id])
  examId      String
  isGenerated Boolean  @default(false)
}

model Option {
  id         String   @id @default(uuid())
  text       String
  isCorrect  Boolean
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
}

model Attempt {
  id        String    @id @default(uuid())
  exam      Exam      @relation(fields: [examId], references: [id])
  examId    String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  startedAt DateTime  @default(now())
  endedAt   DateTime?
  score     Int?
}

enum Role {
  ADMIN
  USER
}
